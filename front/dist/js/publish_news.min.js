function PublishNews(){}PublishNews.prototype.initUEditor=function(){window.ue=UE.getEditor("ueditor",{initialFrameHeight:400,serverUrl:"/ueditor/upload/"})},PublishNews.prototype.listenUploadEvent=function(){var o=$("#thumbnail-btn");o.change(function(){console.log(o);var e=o[0].files[0],t=new FormData;t.append("file",e),$.post({url:"/cms/upload/",data:t,processData:!1,contentType:!1,success:function(e){if(200==e.code){var t=e.data.url,o=$("#form-thumbnail");o.val(t),o.attr({disabled:!0}),window.messageBox.showSuccess("添加成功")}else window.dataMessage.getMessage(e)},fail:function(e){console.log(errro)}})})},PublishNews.prototype.qiniuUploadEvent=function(){var a=this;$("#thumbnail-btn").change(function(){var s=this.files[0];$.get({url:"/cms/qntoken/",success:function(e){if(200==e.code){var t=e.token,o=(new Date).getTime()+"."+s.name.split(".")[1];console.log("token:"+t+"key:"+o);var n={fname:o,params:{},mimeType:["image/png","image/jpg","image/jpeg"]},i={useCdnDomain:!0,retryCount:6,region:qiniu.region.z0};qiniu.upload(s,o,t,n,i).subscribe({next:a.handleFileUploadNext,error:a.handleFileUploadError,complete:a.handleFileUploadComplete})}else window.dataMessage.getMessage(e)},fail:function(e){window.messageBox.showError(e)}})})},PublishNews.prototype.handleFileUploadNext=function(e){var t=e.total.percent.toFixed(0)+"%";$("#progress-group").show();var o=$(".progress-bar");o.css({width:t}),o.text(t)},PublishNews.prototype.handleFileUploadError=function(e){window.messageBox.showError(e.message)},PublishNews.prototype.handleFileUploadComplete=function(e){$("#progress-group").hide(),$(".progress-bar").css({width:"0%"});var t="http://pwm9160nr.bkt.clouddn.com/"+e.key,o=$("#form-thumbnail");o.val(t),o.attr({disabled:!0}),window.messageBox.showSuccess("添加成功")},PublishNews.prototype.listenSubmitEvent=function(e){$("#submit-btn").click(function(e){e.preventDefault();var t=$("input[name=title]").val(),o=$("input[name=thumbnail]").val(),n=$("input[name=desc]").val(),i=$("select[name=category]").val(),s=window.ue.getContent();$.post({url:"/cms/news/publish/",data:{title:t,desc:n,thumbnail:o,category:i,content:s},success:function(e){200==e.code?swalert.alertSuccess("新闻发布成功",function(){window.location.reload()}):window.dataMessage.getMessage(e)},fail:function(e){window.messageBox.showError(e)}})})},PublishNews.prototype.run=function(){this.qiniuUploadEvent(),this.initUEditor(),this.listenSubmitEvent()},$(function(){(new PublishNews).run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
