function Auth(){this.markWrapper=$(".mask-wrapper"),this.scrollWrapper=$(".scroll-wrapper")}$(function(){$("#btn").click(function(){$(".mask-wrapper").show()}),$(".close-btn").click(function(){$(".mask-wrapper").hide()})}),Auth.prototype.showEvent=function(){this.markWrapper.show()},Auth.prototype.hideEvent=function(){this.markWrapper.hide()},Auth.prototype.listenShowHideEvent=function(){var n=this,t=$(".signin-btn"),i=$(".signup-btn"),e=$(".close-btn"),o=$(".scroll-wrapper");t.click(function(){n.showEvent(),o.css({left:0})}),i.click(function(){n.showEvent(),o.css({left:-400})}),e.click(function(){n.hideEvent()})},Auth.prototype.listenSwitch=function(){var t=this;$(".switch").click(function(){var n=t.scrollWrapper.css("left");(n=parseInt(n))<0?t.scrollWrapper.animate({left:"0"}):t.scrollWrapper.animate({left:"-400px"})})},Auth.prototype.listenSignin=function(){var n=$(".signin-group"),e=n.find("input[name='telephone']"),o=n.find("input[name='password']"),r=n.find("input[name='remember']");n.find(".submit-btn").click(function(){var n=e.val(),t=o.val(),i=r.prop("checked");$.post({url:"/account/login/",data:{telephone:n,password:t,remember:i?1:0},success:function(n){if(200==n.code)window.location.reload();else{var t=n.msg;if("string"==typeof t||t.constructor==String)window.messageBox.showError(t);else for(var i in t){var e=t[i][0];window.messageBox.showError(e)}}},fail:function(n){window.messageBox("出现了点小毛病, 重新试一试 ~")}})})},Auth.prototype.run=function(){this.listenShowHideEvent(),this.listenSwitch(),this.listenSignin()},$(function(){(new Auth).run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGguanMiXSwibmFtZXMiOlsiQXV0aCIsInRoaXMiLCJtYXJrV3JhcHBlciIsIiQiLCJzY3JvbGxXcmFwcGVyIiwiY2xpY2siLCJzaG93IiwiaGlkZSIsInByb3RvdHlwZSIsInNob3dFdmVudCIsImhpZGVFdmVudCIsImxpc3RlblNob3dIaWRlRXZlbnQiLCJzZWxmIiwic2lnbmluQnRuIiwic2lnbnVwQnRuIiwiY2xvc2VCdG4iLCJjc3MiLCJsZWZ0IiwibGlzdGVuU3dpdGNoIiwiY3VycmVudExlZnQiLCJwYXJzZUludCIsImFuaW1hdGUiLCJsaXN0ZW5TaWduaW4iLCJzaWduR3JvdXAiLCJ0ZWxlcGhvbmVJbnB1dCIsImZpbmQiLCJwYXNzd29yZElucHV0IiwicmVtZW1iZXJDaGVja2VkIiwidGVsZXBob25lIiwidmFsIiwicGFzc3dvcmQiLCJyZW1lbWJlciIsInByb3AiLCJwb3N0IiwidXJsIiwiZGF0YSIsInN1Y2Nlc3MiLCJyZXN1bHQiLCJ3aW5kb3ciLCJsb2NhdGlvbiIsInJlbG9hZCIsIm1lc3NhZ2VPYmoiLCJjb25zdHJ1Y3RvciIsIlN0cmluZyIsIm1lc3NhZ2VCb3giLCJzaG93RXJyb3IiLCJrZXkiLCJtZXNzYWdlIiwiZmFpbCIsImVycm9yIiwicnVuIl0sIm1hcHBpbmdzIjoiQUFXQSxTQUFTQSxPQUNNQyxLQUNOQyxZQUFjQyxFQUFFLGlCQURWRixLQUVORyxjQUFnQkQsRUFBRSxtQkFiM0JBLEVBQUUsV0FDRUEsRUFBRSxRQUFRRSxNQUFNLFdBQ1pGLEVBQUUsaUJBQWlCRyxTQUd2QkgsRUFBRSxjQUFjRSxNQUFNLFdBQ2xCRixFQUFFLGlCQUFpQkksV0FVM0JQLEtBQUtRLFVBQVVDLFVBQVksV0FFdkJSLEtBQUtDLFlBQVlJLFFBR3JCTixLQUFLUSxVQUFVRSxVQUFZLFdBRXZCVCxLQUFLQyxZQUFZSyxRQUdyQlAsS0FBS1EsVUFBVUcsb0JBQXNCLFdBRWpDLElBQUlDLEVBQU9YLEtBQ1BZLEVBQVlWLEVBQUUsZUFDZFcsRUFBWVgsRUFBRSxlQUNkWSxFQUFXWixFQUFFLGNBQ2JDLEVBQWdCRCxFQUFFLG1CQUV0QlUsRUFBVVIsTUFBTSxXQUNaTyxFQUFLSCxZQUNMTCxFQUFjWSxJQUFJLENBQUNDLEtBQVEsTUFHL0JILEVBQVVULE1BQU0sV0FDWk8sRUFBS0gsWUFDTEwsRUFBY1ksSUFBSSxDQUFDQyxNQUFTLFFBR2hDRixFQUFTVixNQUFNLFdBQ1hPLEVBQUtGLGVBSWJWLEtBQUtRLFVBQVVVLGFBQWUsV0FFMUIsSUFBSU4sRUFBT1gsS0FDWEUsRUFBRSxXQUFXRSxNQUFNLFdBQ2YsSUFBSWMsRUFBY1AsRUFBS1IsY0FBY1ksSUFBSSxTQUN6Q0csRUFBY0MsU0FBU0QsSUFDTCxFQUNkUCxFQUFLUixjQUFjaUIsUUFBUSxDQUFDSixLQUFRLE1BRXBDTCxFQUFLUixjQUFjaUIsUUFBUSxDQUFDSixLQUFRLGNBS2hEakIsS0FBS1EsVUFBVWMsYUFBZSxXQUUxQixJQUNJQyxFQUFZcEIsRUFBRSxpQkFDZHFCLEVBQWlCRCxFQUFVRSxLQUFLLDJCQUNoQ0MsRUFBZ0JILEVBQVVFLEtBQUssMEJBQy9CRSxFQUFrQkosRUFBVUUsS0FBSywwQkFFckJGLEVBQVVFLEtBQUssZUFFckJwQixNQUFNLFdBQ1osSUFBSXVCLEVBQVlKLEVBQWVLLE1BQzNCQyxFQUFXSixFQUFjRyxNQUN6QkUsRUFBV0osRUFBZ0JLLEtBQUssV0FFcEM3QixFQUFFOEIsS0FBSyxDQUNIQyxJQUFPLGtCQUNQQyxLQUFRLENBQ0pQLFVBQVdBLEVBQ1hFLFNBQVVBLEVBQ1ZDLFNBQVVBLEVBQVcsRUFBSSxHQUU3QkssUUFBVyxTQUFVQyxHQUVqQixHQUFzQixLQUFsQkEsRUFBYSxLQUNiQyxPQUFPQyxTQUFTQyxhQUNiLENBQ0gsSUFBSUMsRUFBYUosRUFBWSxJQUM3QixHQUF5QixpQkFBZEksR0FBMEJBLEVBQVdDLGFBQWVDLE9BQzNETCxPQUFPTSxXQUFXQyxVQUFVSixRQUU1QixJQUFLLElBQUlLLEtBQU9MLEVBQVksQ0FDeEIsSUFDSU0sRUFEV04sRUFBV0ssR0FDSCxHQUN2QlIsT0FBT00sV0FBV0MsVUFBVUUsTUFLNUNDLEtBQVEsU0FBVUMsR0FDZFgsT0FBT00sV0FBVywwQkFRbEM1QyxLQUFLUSxVQUFVMEMsSUFBTSxXQUNqQmpELEtBQUtVLHNCQUNMVixLQUFLaUIsZUFDTGpCLEtBQUtxQixnQkFJVG5CLEVBQUUsWUFDYSxJQUFJSCxNQUNWa0QiLCJmaWxlIjoiYXV0aC5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyDngrnlh7vnmbvlvZXmjInpkq7vvIzlvLnlh7rmqKHmgIHlr7nor53moYZcclxuJChmdW5jdGlvbiAoKSB7XHJcbiAgICAkKFwiI2J0blwiKS5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgJChcIi5tYXNrLXdyYXBwZXJcIikuc2hvdygpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgJChcIi5jbG9zZS1idG5cIikuY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICQoXCIubWFzay13cmFwcGVyXCIpLmhpZGUoKTtcclxuICAgIH0pO1xyXG59KTtcclxuXHJcbmZ1bmN0aW9uIEF1dGgoKSB7XHJcbiAgICB2YXIgc2VsZiA9IHRoaXM7XHJcbiAgICBzZWxmLm1hcmtXcmFwcGVyID0gJChcIi5tYXNrLXdyYXBwZXJcIik7XHJcbiAgICBzZWxmLnNjcm9sbFdyYXBwZXIgPSAkKFwiLnNjcm9sbC13cmFwcGVyXCIpO1xyXG59XHJcblxyXG5BdXRoLnByb3RvdHlwZS5zaG93RXZlbnQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAvLyDmmL7npLrmqKHmgIHmoYZcclxuICAgIHRoaXMubWFya1dyYXBwZXIuc2hvdygpO1xyXG59O1xyXG5cclxuQXV0aC5wcm90b3R5cGUuaGlkZUV2ZW50ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgLy8g6ZqQ6JeP5qih5oCB5qGGXHJcbiAgICB0aGlzLm1hcmtXcmFwcGVyLmhpZGUoKTtcclxufTtcclxuXHJcbkF1dGgucHJvdG90eXBlLmxpc3RlblNob3dIaWRlRXZlbnQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAvLyDnm5HlkKznmbvlvZXms6jlhozmqKHmgIHmoYbmmL7npLrpmpDol49cclxuICAgIHZhciBzZWxmID0gdGhpcztcclxuICAgIHZhciBzaWduaW5CdG4gPSAkKFwiLnNpZ25pbi1idG5cIik7XHJcbiAgICB2YXIgc2lnbnVwQnRuID0gJChcIi5zaWdudXAtYnRuXCIpO1xyXG4gICAgdmFyIGNsb3NlQnRuID0gJChcIi5jbG9zZS1idG5cIik7XHJcbiAgICB2YXIgc2Nyb2xsV3JhcHBlciA9ICQoXCIuc2Nyb2xsLXdyYXBwZXJcIik7XHJcblxyXG4gICAgc2lnbmluQnRuLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBzZWxmLnNob3dFdmVudCgpO1xyXG4gICAgICAgIHNjcm9sbFdyYXBwZXIuY3NzKHtcImxlZnRcIjogMH0pO1xyXG4gICAgfSk7XHJcblxyXG4gICAgc2lnbnVwQnRuLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBzZWxmLnNob3dFdmVudCgpO1xyXG4gICAgICAgIHNjcm9sbFdyYXBwZXIuY3NzKHtcImxlZnRcIjogLTQwMH0pO1xyXG4gICAgfSk7XHJcblxyXG4gICAgY2xvc2VCdG4uY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHNlbGYuaGlkZUV2ZW50KCk7XHJcbiAgICB9KVxyXG59O1xyXG5cclxuQXV0aC5wcm90b3R5cGUubGlzdGVuU3dpdGNoID0gZnVuY3Rpb24gKCkge1xyXG4gICAgLy8g55uR5ZCs55m75b2V5rOo5YaM5qih5oCB5qGG5YiH5o2iXHJcbiAgICB2YXIgc2VsZiA9IHRoaXM7XHJcbiAgICAkKFwiLnN3aXRjaFwiKS5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdmFyIGN1cnJlbnRMZWZ0ID0gc2VsZi5zY3JvbGxXcmFwcGVyLmNzcyhcImxlZnRcIik7XHJcbiAgICAgICAgY3VycmVudExlZnQgPSBwYXJzZUludChjdXJyZW50TGVmdCk7XHJcbiAgICAgICAgaWYgKGN1cnJlbnRMZWZ0IDwgMCkge1xyXG4gICAgICAgICAgICBzZWxmLnNjcm9sbFdyYXBwZXIuYW5pbWF0ZSh7XCJsZWZ0XCI6ICcwJ30pO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHNlbGYuc2Nyb2xsV3JhcHBlci5hbmltYXRlKHtcImxlZnRcIjogXCItNDAwcHhcIn0pO1xyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG59O1xyXG5cclxuQXV0aC5wcm90b3R5cGUubGlzdGVuU2lnbmluID0gZnVuY3Rpb24gKCkge1xyXG4gICAgLy8g55m75b2VXHJcbiAgICB2YXIgc2VsZiA9IHRoaXM7XHJcbiAgICB2YXIgc2lnbkdyb3VwID0gJChcIi5zaWduaW4tZ3JvdXBcIik7XHJcbiAgICB2YXIgdGVsZXBob25lSW5wdXQgPSBzaWduR3JvdXAuZmluZChcImlucHV0W25hbWU9J3RlbGVwaG9uZSddXCIpO1xyXG4gICAgdmFyIHBhc3N3b3JkSW5wdXQgPSBzaWduR3JvdXAuZmluZChcImlucHV0W25hbWU9J3Bhc3N3b3JkJ11cIik7XHJcbiAgICB2YXIgcmVtZW1iZXJDaGVja2VkID0gc2lnbkdyb3VwLmZpbmQoXCJpbnB1dFtuYW1lPSdyZW1lbWJlciddXCIpO1xyXG5cclxuICAgIHZhciBzdWJtaXRCdG4gPSBzaWduR3JvdXAuZmluZCgnLnN1Ym1pdC1idG4nKTtcclxuXHJcbiAgICBzdWJtaXRCdG4uY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciB0ZWxlcGhvbmUgPSB0ZWxlcGhvbmVJbnB1dC52YWwoKTtcclxuICAgICAgICB2YXIgcGFzc3dvcmQgPSBwYXNzd29yZElucHV0LnZhbCgpO1xyXG4gICAgICAgIHZhciByZW1lbWJlciA9IHJlbWVtYmVyQ2hlY2tlZC5wcm9wKCdjaGVja2VkJyk7XHJcblxyXG4gICAgICAgICQucG9zdCh7XHJcbiAgICAgICAgICAgICd1cmwnOiAnL2FjY291bnQvbG9naW4vJyxcclxuICAgICAgICAgICAgJ2RhdGEnOiB7XHJcbiAgICAgICAgICAgICAgICB0ZWxlcGhvbmU6IHRlbGVwaG9uZSxcclxuICAgICAgICAgICAgICAgIHBhc3N3b3JkOiBwYXNzd29yZCxcclxuICAgICAgICAgICAgICAgIHJlbWVtYmVyOiByZW1lbWJlciA/IDEgOiAwLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAnc3VjY2Vzcyc6IGZ1bmN0aW9uIChyZXN1bHQpIHtcclxuICAgICAgICAgICAgICAgIC8vIOeZu+W9lea2iOaBr+aPkOekulxyXG4gICAgICAgICAgICAgICAgaWYgKHJlc3VsdFsnY29kZSddID09IDIwMCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIG1lc3NhZ2VPYmogPSByZXN1bHRbJ21zZyddO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgbWVzc2FnZU9iaiA9PSBcInN0cmluZ1wiIHx8IG1lc3NhZ2VPYmouY29uc3RydWN0b3IgPT0gU3RyaW5nKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5tZXNzYWdlQm94LnNob3dFcnJvcihtZXNzYWdlT2JqKVxyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGtleSBpbiBtZXNzYWdlT2JqKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgbWVzc2FnZXMgPSBtZXNzYWdlT2JqW2tleV07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgbWVzc2FnZSA9IG1lc3NhZ2VzWzBdO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93Lm1lc3NhZ2VCb3guc2hvd0Vycm9yKG1lc3NhZ2UpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAnZmFpbCc6IGZ1bmN0aW9uIChlcnJvcikge1xyXG4gICAgICAgICAgICAgICAgd2luZG93Lm1lc3NhZ2VCb3goXCLlh7rnjrDkuobngrnlsI/mr5vnl4UsIOmHjeaWsOivleS4gOivlSB+XCIpXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KVxyXG4gICAgfSlcclxuXHJcblxyXG59O1xyXG5cclxuQXV0aC5wcm90b3R5cGUucnVuID0gZnVuY3Rpb24gKCkge1xyXG4gICAgdGhpcy5saXN0ZW5TaG93SGlkZUV2ZW50KCk7XHJcbiAgICB0aGlzLmxpc3RlblN3aXRjaCgpO1xyXG4gICAgdGhpcy5saXN0ZW5TaWduaW4oKTtcclxufTtcclxuXHJcblxyXG4kKGZ1bmN0aW9uICgpIHtcclxuICAgIHZhciBhdXRoID0gbmV3IEF1dGgoKTtcclxuICAgIGF1dGgucnVuKCk7XHJcbn0pOyJdfQ==
