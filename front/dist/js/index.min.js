function Banner(){this.bannerWidth=798,this.bannerGroup=$("#banner-group"),this.index=1,this.leftArrow=$(".left-arrow"),this.rightArrow=$(".right-arrow"),this.bannerUl=$("#banner-ul"),this.liList=this.bannerUl.children("li"),this.bannerCount=this.liList.length,this.pageControl=$(".page-control")}function News(){this.page=2,this.category_id=0,this.loadMoreBtn=$("#load-more")}Banner.prototype.initBanner=function(){var n=this,e=n.liList.eq(0).clone(),t=n.liList.eq(n.bannerCount-1).clone();n.bannerUl.append(e),n.bannerUl.prepend(t),n.bannerUl.css({width:n.bannerWidth*(n.bannerCount+2),left:-n.bannerWidth})},Banner.prototype.initPageControl=function(){for(var n=this,e=0;e<n.bannerCount;e++){var t=$("<li></li>");n.pageControl.append(t),0===e&&t.addClass("active")}n.pageControl.css({width:12*n.bannerCount+16+16*(n.bannerCount-1)})},Banner.prototype.toggleArrow=function(n){var e=this;n?(e.leftArrow.show(),e.rightArrow.show()):(e.leftArrow.hide(),e.rightArrow.hide())},Banner.prototype.animate=function(){var n=this;n.bannerUl.animate({left:-798*n.index},500);var e=n.index;e=0===e?n.bannerCount-1:e===n.bannerCount+1?0:n.index-1,n.pageControl.children("li").eq(e).addClass("active").siblings().removeClass("active")},Banner.prototype.loop=function(){var n=this;this.timer=setInterval(function(){n.index>=n.bannerCount+1?(n.bannerUl.css({left:-n.bannerWidth}),n.index=2):n.index++,n.animate()},2e3)},Banner.prototype.listenArrowClick=function(){var n=this;n.leftArrow.click(function(){0===n.index?(n.bannerUl.css({left:-n.bannerCount*n.bannerWidth}),n.index=n.bannerCount-1):n.index--,n.animate()}),n.rightArrow.click(function(){n.index===n.bannerCount+1?(n.bannerUl.css({left:-n.bannerWidth}),n.index=2):n.index++,n.animate()})},Banner.prototype.listenBannerHover=function(){var n=this;this.bannerGroup.hover(function(){clearInterval(n.timer),n.toggleArrow(!0)},function(){n.loop(),n.toggleArrow(!1)})},Banner.prototype.listenPageControl=function(){var t=this;t.pageControl.children("li").each(function(n,e){$(e).click(function(){t.index=n,t.animate()})})},Banner.prototype.run=function(){this.initBanner(),this.initPageControl(),this.loop(),this.listenBannerHover(),this.listenArrowClick(),this.listenPageControl()},News.prototype.listenLoadMoreEvent=function(){var i=this;i.loadMoreBtn.click(function(n){n.preventDefault(),$.get({url:"/news/list/",data:{p:i.page,category_id:i.category_id},success:function(n){if(200==n.code){var e=n.data;if(0<e.length){var t=template("news-item",{newses:e});$(".list-inner-group").append(t),i.page+=1}else i.loadMoreBtn.hide()}else window.dataMessage.getMessage(n)},fail:function(n){console.log(n)}})})},News.prototype.listenCategorySwitchEvent=function(){var a=this;$(".list-tab").children().click(function(){var r=$(this),o=r.attr("data-category");a.loadMoreBtn.show(),$.get({url:"/news/list/",data:{category_id:o,p:1},success:function(n){if(200==n.code){var e=n.data,t=template("news-item",{newses:e}),i=$(".list-inner-group");i.empty(),i.append(t),a.page=2,a.category_id=o,r.addClass("active").siblings().removeClass("active")}else window.dataMessage.getMessage(n)}})})},News.prototype.run=function(){this.listenLoadMoreEvent(),this.listenCategorySwitchEvent()},$(function(){(new Banner).run(),(new News).run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
